{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Documents\\\\Faculdade\\\\prog movel\\\\EP1ALT progmovel\\\\FoodApp\\\\components\\\\ToggleableMenu.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Cardapio1 from \"./Cardapio1\";\nimport Cardapio2 from \"./Cardapio2\";\n\nvar ToggleableMenu = function ToggleableMenu(props) {\n  var tipoRestaurante = null;\n  var nomeRest = '';\n\n  switch (props.id) {\n    case 1:\n      tipoRestaurante = React.createElement(Cardapio1, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }\n      });\n      nomeRest = 'McDonald\\'s';\n      break;\n\n    case 2:\n      tipoRestaurante = React.createElement(Cardapio2, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }\n      });\n      nomeRest = 'Burger King';\n      break;\n\n    default:\n      tipoRestaurante = React.createElement(Cardapio1, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      });\n      nomeRest = 'McDonald\\'s';\n      break;\n  }\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      active = _useState4[0],\n      setActive = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    disabled: !active,\n    onPress: function onPress() {\n      setToggle(!toggle);\n      setActive(!active);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, toggle == false ? React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, nomeRest) : React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setToggle(!toggle);\n      setActive(!active);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, props.nomeRest)), tipoRestaurante)));\n};\n\nexport default ToggleableMenu;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    borderColor: '#D6D7DA',\n    borderWidth: 2,\n    borderRadius: 10,\n    padding: 15,\n    marginBottom: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  altContainer: {\n    backgroundColor: 'gray',\n    borderColor: '#D6D7DA',\n    borderWidth: 2,\n    borderRadius: 10,\n    padding: 15,\n    margin: 15,\n    marginBottom: 0\n  },\n  buttonPadding: {\n    paddingHorizontal: 15\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["D:/Documents/Faculdade/prog movel/EP1ALT progmovel/FoodApp/components/ToggleableMenu.js"],"names":["React","useState","Cardapio1","Cardapio2","ToggleableMenu","props","tipoRestaurante","nomeRest","id","toggle","setToggle","active","setActive","styles","container","button","title","StyleSheet","create","backgroundColor","borderColor","borderWidth","borderRadius","padding","marginBottom","alignItems","justifyContent","altContainer","margin","buttonPadding","paddingHorizontal","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\r\n\r\nimport Cardapio1 from \"./Cardapio1\";\r\nimport Cardapio2 from \"./Cardapio2\";\r\n\r\nconst ToggleableMenu = (props) => {\r\n  let tipoRestaurante = null\r\n  let nomeRest = ''\r\n\r\n  switch (props.id) {\r\n    case 1:\r\n      tipoRestaurante = <Cardapio1 />\r\n      nomeRest = 'McDonald\\'s'\r\n      break;\r\n    case 2:\r\n      tipoRestaurante = <Cardapio2 />\r\n      nomeRest = 'Burger King'\r\n      break;\r\n    default:\r\n      tipoRestaurante = <Cardapio1 />\r\n      nomeRest = 'McDonald\\'s'\r\n      break;\r\n  }\r\n\r\n  const [toggle,setToggle] = useState(false);\r\n  const [active,setActive] = useState(true);\r\n  return (\r\n  <View style={styles.container}>\r\n    <TouchableOpacity\r\n      style={styles.button}\r\n      disabled={!active}\r\n      onPress={()=> {\r\n        setToggle(!toggle);\r\n        setActive(!active)\r\n      }}\r\n    >\r\n    {\r\n      toggle==false?\r\n      <Text style={styles.title}>\r\n        {nomeRest}\r\n      </Text>\r\n      :\r\n      <>\r\n        <TouchableOpacity\r\n          onPress={()=> {\r\n            setToggle(!toggle);\r\n            setActive(!active)\r\n          }}\r\n        >\r\n          <Text style={styles.title}>\r\n            {props.nomeRest}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        \r\n        {tipoRestaurante}\r\n\r\n        {/*<button\r\n          onClick={() => {\r\n            props.handler((props.total)+1);\r\n          }\r\n        }>\r\n           + \r\n        </button>\r\n        <Text>Valor:{props.total}</Text>*/}\r\n      </>\r\n    }\r\n    </TouchableOpacity>\r\n  </View>\r\n  );\r\n}\r\n\r\nexport default ToggleableMenu;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n    borderColor: '#D6D7DA',\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 0,\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n  },\r\n  altContainer: {\r\n    backgroundColor: 'gray',\r\n    borderColor: '#D6D7DA',\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    margin: 15,\r\n    marginBottom: 0,\r\n},\r\n  buttonPadding: {\r\n    paddingHorizontal: 15,\r\n  },\r\n  button: {\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    padding:20\r\n  },\r\n  title: {\r\n    fontSize:24,\r\n    fontWeight:'bold',\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}